# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

# mol = [int(x) for x in input("Введите через пробел 2 числа. Первое - кол-во элементов первого множества. Второе - кол-во элементов второго множества: ").split()] 
# n = mol[0]
# m = mol[1]

# set_1 = set() # Создаём 2 пустых множества. Множество(set) - содержит уникальные элементы.
# set_2 = set() 
# list_1 = list() # Создаём пустой список(list). В списках могут храниться элементы любых типов данных.
# a = [int(x) for x in input(f"Введите {n} элементов первого множества через пробел: ").split()] # создаём список (а), вводим элементы через пробел
# k = set(a) # удаляем из списка (а) случайные элементы, посредством перевода списка в множенство (k)
# for i in k:
#     set_1.add(i) # добавляем в множесто (set_1) элементы из множества (a)
# b = [int(x) for x in input(f"Введите {m} элементов второго множества через пробел: ").split()] # создаём список (b), вводим элементы через пробел
# k1 = set(b) # удаляем из списка (b) случайные элементы, посредством перевода списка в множенство (k1)
# for i in k1:
#     set_2.add(i) # добавляем в множесто (set_2) элементы из множества (b)
# lok = set_1 & set_2 # создаём множество (lok) по пересечению значений из множеств (set_1) и (set_2)
# kool = list(lok) # переводим множество (lok) в список (kool) для сортировки
# kool.sort # сортируем множество (kool)
# for i in kool:
#     print(i, end = "") # выводим элементы через пробел

# list_1 = list()
# list_2 = list()

# n = int(input("Введите кол-во элементов первого списка: "))
# print("Заполним первый список целыми числами")
# for i in range(n):
#     list_1.append(int(input(f'Введите элемент №{i + 1}: ')))
# print(f'Первый список: {list_1}')

# m = int(input("Введите кол-во элементов второго списка: "))
# print("Заполним второй список целыми числами")
# for i in range(m):
#     list_2.append(int(input(f'Введите элемент №{i + 1}: ')))
# print(f'Второй список: {list_2}')

# list_1 = set(list_1)
# list_2 = set(list_2)
# result = list_1 & list_2
# result = list(result).sort
# print(f'Числа содержащиеся в первом и во втором списках: {result}')

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, 
# причём кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних.
# Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод
# — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. 
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, 
# собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход 
# собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.

n = int(input("Введите кол-во кустов черники: "))
bushes = list() 
for i in range(n):
    x = int(input(f'Куст №{i + 1} даёт ягод: '))
    bushes.append(x)
max_fee = list()
for i in range(len(bushes) - 1):
    max_fee.append(bushes[i] + bushes[i - 1] + bushes[i + 1])
max_fee.append(bushes[0] + bushes[- 1] + bushes[- 2])
print(f'Максимально выгодная позиция сбора даст ягод: {max(max_fee)}')